{"beginning": "", "block_list": [{"block_type": 6, "content": [{"AP": [["0%{?fedora}", 1]], "block_type": 2, "body": "1", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_devel", "options": null}, {"AP": [["0%{?fedora}", 1]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_bundled", "options": null}, {"AP": [["0%{?fedora}", 1]], "block_type": 2, "body": "1", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_debug", "options": null}, {"AP": [["0%{?fedora}", 1]], "block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate", "metastring": "%0\n"}, {"AP": [["0%{?fedora}", 1]], "block_type": 5, "content": "# what is wrong", "metastring": "%0\n"}, {"AP": [["0%{?fedora}", 1]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_check", "options": null}, {"AP": [["0%{?fedora}", 1]], "block_type": 2, "body": "1", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_unit_test", "options": null}], "else_body": [{"AP": [["0%{?fedora}", 0]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_devel", "options": null}, {"AP": [["0%{?fedora}", 0]], "block_type": 2, "body": "1", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_bundled", "options": null}, {"AP": [["0%{?fedora}", 0]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_debug", "options": null}, {"AP": [["0%{?fedora}", 0]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_check", "options": null}, {"AP": [["0%{?fedora}", 0]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "with_unit_test", "options": null}], "else_keyword": "else", "end_keyword": "endif", "expression": "0%{?fedora}", "keyword": "if", "metastring": "%0 %1\n%3\n%5\n\n"}, {"block_type": 6, "content": [{"AP": [["0%{?with_debug}", 1]], "block_type": 2, "body": "0", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "_dwz_low_mem_die_limit", "options": null}], "else_body": [{"AP": [["0%{?with_debug}", 0]], "block_type": 2, "body": "%{nil}", "keyword": "global", "metastring": "%0 %1   %3\n", "name": "debug_package", "options": null}], "else_keyword": "else", "end_keyword": "endif", "expression": "0%{?with_debug}", "keyword": "if", "metastring": "%0 %1\n%3\n%5\n\n"}, {"block_type": 6, "content": [{"AP": [["! 0%{?gobuild:1}", 1]], "block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**};", "keyword": "define", "metastring": "%0 %1%2 %3 \n", "name": "gobuild", "options": "(o:)"}], "end_keyword": "endif", "expression": "! 0%{?gobuild:1}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 2, "body": "github", "keyword": "global", "metastring": "%0 %1        %3\n", "name": "provider"}, {"block_type": 2, "body": "com", "keyword": "global", "metastring": "%0 %1    %3\n", "name": "provider_tld"}, {"block_type": 2, "body": "coreos", "keyword": "global", "metastring": "%0 %1         %3\n", "name": "project"}, {"block_type": 2, "body": "etcd", "keyword": "global", "metastring": "%0 %1            %3\n", "name": "repo"}, {"block_type": 5, "content": "# https://github.com/coreos/etcd", "metastring": "%0\n"}, {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}", "keyword": "global", "metastring": "%0 %1 %3\n", "name": "provider_prefix"}, {"block_type": 2, "body": "%{provider_prefix}", "keyword": "global", "metastring": "%0 %1     %3\n", "name": "import_path"}, {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1", "keyword": "global", "metastring": "%0 %1          %3\n", "name": "commit"}, {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})", "keyword": "global", "metastring": "%0 %1     %3\n\n", "name": "shortcommit"}, {"block_type": 0, "content": "%{repo}", "key": "Name", "metastring": "%0\t\t%2\n"}, {"block_type": 0, "content": "3.1.6", "key": "Version", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "1%{?dist}", "key": "Release", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "A highly-available key value store for shared configuration", "key": "Summary", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "ASL 2.0", "key": "License", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "https://%{provider_prefix}", "key": "URL", "metastring": "%0\t\t%2\n"}, {"block_type": 0, "content": "https://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz", "key": "Source0", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "%{name}.service", "key": "Source1", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "%{name}.conf", "key": "Source2", "metastring": "%0\t%2\n"}, {"block_type": 0, "content": "change-import-path.patch", "key": "Patch2", "metastring": "%0         %2\n"}, {"block_type": 0, "content": "run-etcd-on-ppc64le-by-default.patch", "key": "Patch3", "metastring": "%0         %2\n\n"}, {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required", "metastring": "%0\n"}, {"block_type": 0, "content": "%{ix86} x86_64 %{arm} aarch64 ppc64le s390x", "key": "ExclusiveArch", "metastring": "%0  %2\n"}, {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.", "metastring": "%0\n"}, {"block_type": 0, "content": "%{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}", "key": "BuildRequires", "metastring": "%0  %2\n\n"}, {"block_type": 6, "content": [{"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/bgentry/speakeasy)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/boltdb/bolt)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/cheggaaa/pb)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/cockroachdb/cmux)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-semver/semver)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/daemon)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/util)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/coreos/pkg/capnslog)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/dustin/go-humanize)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/ghodss/yaml)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/gogo/protobuf/proto)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/golang/protobuf/proto)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/google/btree)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/go-grpc-prometheus)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/runtime)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/utilities)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/jonboulle/clockwork)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/karlseguin/ccache)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/kr/pty)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/olekukonko/tablewriter)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/prometheus/client_golang/prometheus)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/spf13/cobra)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/spf13/pflag)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/ugorji/go/codec)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/urfave/cli)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(github.com/xiang90/probing)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(golang.org/x/crypto/bcrypt)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/context)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/http2)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(golang.org/x/time/rate)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/codes)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/credentials)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/grpclog)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/metadata)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/naming)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["! 0%{?with_bundled}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/transport)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}], "end_keyword": "endif", "expression": "! 0%{?with_bundled}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 0, "content": "systemd", "key": "BuildRequires", "metastring": "%0\t%2\n\n"}, {"block_type": 0, "content": "shadow-utils", "key": "Requires", "metastring": "%0%1\t%2\n", "option": "pre"}, {"block_type": 0, "content": "systemd", "key": "Requires", "metastring": "%0%1 %2\n", "option": "post"}, {"block_type": 0, "content": "systemd", "key": "Requires", "metastring": "%0%1 %2\n", "option": "preun"}, {"block_type": 0, "content": "systemd", "key": "Requires", "metastring": "%0%1 %2\n\n", "option": "postun"}, {"block_type": 1, "content": "A highly-available key value store for shared configuration.", "keyword": "description", "metastring": "%0\n%4\n\n"}, {"block_type": 6, "content": [{"AP": [["0%{?with_devel}", 1]], "block_type": 1, "content": [{"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "etcd golang devel libraries", "key": "Summary", "metastring": "%0        %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "noarch", "key": "BuildArch", "metastring": "%0      %2\n\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 6, "content": [{"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/bgentry/speakeasy)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/boltdb/bolt)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/cheggaaa/pb)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/cockroachdb/cmux)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-semver/semver)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/daemon)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/util)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/coreos/pkg/capnslog)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/dustin/go-humanize)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/ghodss/yaml)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/gogo/protobuf/proto)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/golang/protobuf/proto)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/google/btree)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/go-grpc-prometheus)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/runtime)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/utilities)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/jonboulle/clockwork)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/karlseguin/ccache)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/kr/pty)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/olekukonko/tablewriter)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/prometheus/client_golang/prometheus)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/spf13/cobra)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/spf13/pflag)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/ugorji/go/codec)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/urfave/cli)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(github.com/xiang90/probing)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(golang.org/x/crypto/bcrypt)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/context)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/http2)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(golang.org/x/time/rate)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/codes)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/credentials)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/grpclog)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/metadata)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/naming)", "key": "BuildRequires", "metastring": "%0 %2\n", "option": null}], "else_body": [], "else_keyword": null, "end_keyword": "endif", "expression": "0%{?with_check}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/bgentry/speakeasy)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/boltdb/bolt)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/cheggaaa/pb)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/cockroachdb/cmux)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-semver/semver)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/daemon)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/coreos/go-systemd/util)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/coreos/pkg/capnslog)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/dustin/go-humanize)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/ghodss/yaml)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/gogo/protobuf/proto)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/golang/protobuf/proto)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/google/btree)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/go-grpc-prometheus)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/runtime)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/grpc-ecosystem/grpc-gateway/utilities)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/jonboulle/clockwork)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/karlseguin/ccache)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/kr/pty)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/olekukonko/tablewriter)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/prometheus/client_golang/prometheus)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/spf13/cobra)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/spf13/pflag)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/ugorji/go/codec)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/urfave/cli)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(github.com/xiang90/probing)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(golang.org/x/crypto/bcrypt)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/context)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(golang.org/x/net/http2)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(golang.org/x/time/rate)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/codes)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/credentials)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/grpclog)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/metadata)", "key": "Requires", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(google.golang.org/grpc/naming)", "key": "Requires", "metastring": "%0 %2\n\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/alarm) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/auth) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/auth/authpb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/client) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/client/integration) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/clientv3) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/clientv3/integration) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/clientv3/mirror) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/clientv3/naming) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/compactor) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/contrib/recipes) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/discovery) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/e2e) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/embed) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/error) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdmain) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/api) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/auth) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/membership) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/etcdserver/stats) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/integration) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/lease) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/lease/leasehttp) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/lease/leasepb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/mvcc) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/mvcc/backend) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/adt) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/contention) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/cors) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/crc) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/expect) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/fileutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/flags) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/httputil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/idutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/ioutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/logutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/monotime) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/netutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/osutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/pathutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/pbutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/report) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/runtime) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/schedule) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/stringutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/testutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/transport) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/types) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/pkg/wait) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/raft) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/raft/raftpb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/raft/rafttest) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/rafthttp) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/snap) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/snap/snappb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/store) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/version) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/wal) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 0, "content": "golang(%{import_path}/wal/walpb) = %{version}-%{release}", "key": "Provides", "metastring": "%0 %2\n\n", "option": null}, {"AP": [["0%{?with_devel}", 1]], "block_type": 1, "content": "golang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description", "metastring": "%0 %1\n%4\n", "name": "devel", "parameters": null, "subname": null}], "keyword": "package", "metastring": "%0 %3\n%4", "parameters": null, "subname": "devel"}], "end_keyword": "endif", "expression": "0%{?with_devel}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 6, "content": [{"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 1, "content": [{"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 0, "content": "Unit tests for %{name} package", "key": "Summary", "metastring": "%0         %2\n", "option": null}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.", "metastring": "%0\n"}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 0, "content": "%{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}", "key": "BuildRequires", "metastring": "%0  %2\n\n", "option": null}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 6, "content": [{"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests", "metastring": "%0\n"}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1], ["0%{?with_check}", 1]], "block_type": 5, "content": "#in %%check section need for running", "metastring": "%0\n"}], "else_body": [], "else_keyword": null, "end_keyword": "endif", "expression": "0%{?with_check}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 5, "content": "# test subpackage tests code from devel subpackage", "metastring": "%0\n"}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 0, "content": "%{name}-devel = %{version}-%{release}", "key": "Requires", "metastring": "%0        %2\n\n", "option": null}, {"AP": [["0%{?with_unit_test} && 0%{?with_devel}", 1]], "block_type": 1, "content": "%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description", "metastring": "%0 %1\n%4\n", "name": "unit-test", "parameters": null, "subname": null}], "keyword": "package", "metastring": "%0 %3\n%4", "parameters": null, "subname": "unit-test"}], "end_keyword": "endif", "expression": "0%{?with_unit_test} && 0%{?with_devel}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 1, "content": "%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1", "keyword": "prep", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "mkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl", "keyword": "build", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "install -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif", "keyword": "install", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif", "keyword": "check", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "getent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}", "keyword": "pre", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "%systemd_post %{name}.service", "keyword": "post", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "%systemd_preun %{name}.service", "keyword": "preun", "metastring": "%0\n%4\n\n"}, {"block_type": 1, "content": "%systemd_postun %{name}.service\n\n#define license tag if not already defined", "keyword": "postun", "metastring": "%0\n%4\n"}, {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "", "metastring": "%0%1%2%3\n\n", "name": "_licensedir"}, {"block_type": 1, "content": "%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service", "keyword": "files", "metastring": "%0\n%4\n\n"}, {"block_type": 6, "content": [{"AP": [["0%{?with_devel}", 1]], "block_type": 1, "content": "%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files", "metastring": "%0 %1 %2 %3\n%4\n", "name": "devel", "parameters": "f", "subname": "devel.file-list"}], "end_keyword": "endif", "expression": "0%{?with_devel}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 6, "content": [{"AP": [["0%{?with_unit_test}", 1]], "block_type": 1, "content": "%license LICENSE\n%doc *.md", "keyword": "files", "metastring": "%0 %1 %2 %3\n%4\n", "name": "unit-test", "parameters": "f", "subname": "unit-test.file-list"}], "end_keyword": "endif", "expression": "0%{?with_unit_test}", "keyword": "if", "metastring": "%0 %1\n%5\n\n"}, {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation"], "keyword": "changelog", "metastring": "%0\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n\n%4\n"}], "end": "\n"}
