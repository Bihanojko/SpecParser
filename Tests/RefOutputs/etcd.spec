{"beginning": {"content": "", "next": {"block_type": 6, "content": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, "options": null}, "options": null}, "options": null}, "else_body": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, "options": null}, "options": null}, "options": null}, "else_keyword": "else\n", "end_keyword": "endif\n\n", "expression": "0%{?fedora}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "_dwz_low_mem_die_limit ", "next": null, "options": null}, "else_body": {"block_type": 2, "body": "%{nil}\n", "keyword": "global ", "name": "debug_package   ", "next": null, "options": null}, "else_keyword": "else\n", "end_keyword": "endif\n\n", "expression": "0%{?with_debug}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**}; \n", "keyword": "define ", "name": "gobuild", "next": null, "options": "(o:) "}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?gobuild:1}\n", "keyword": "if ", "next": {"block_type": 2, "body": "github\n", "keyword": "global ", "name": "provider        ", "next": {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, "options": null}}}}}, "comments": [{"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}, {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, "option": null}}, {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}, {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}], "conditions": [{"block_type": 6, "content": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, "options": null}, "options": null}, "options": null}, "else_body": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, "options": null}, "options": null}, "options": null}, "else_keyword": "else\n", "end_keyword": "endif\n\n", "expression": "0%{?fedora}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "_dwz_low_mem_die_limit ", "next": null, "options": null}, "else_body": {"block_type": 2, "body": "%{nil}\n", "keyword": "global ", "name": "debug_package   ", "next": null, "options": null}, "else_keyword": "else\n", "end_keyword": "endif\n\n", "expression": "0%{?with_debug}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**}; \n", "keyword": "define ", "name": "gobuild", "next": null, "options": "(o:) "}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?gobuild:1}\n", "keyword": "if ", "next": {"block_type": 2, "body": "github\n", "keyword": "global ", "name": "provider        ", "next": {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, "options": null}}}}, {"block_type": 6, "content": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "_dwz_low_mem_die_limit ", "next": null, "options": null}, "else_body": {"block_type": 2, "body": "%{nil}\n", "keyword": "global ", "name": "debug_package   ", "next": null, "options": null}, "else_keyword": "else\n", "end_keyword": "endif\n\n", "expression": "0%{?with_debug}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**}; \n", "keyword": "define ", "name": "gobuild", "next": null, "options": "(o:) "}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?gobuild:1}\n", "keyword": "if ", "next": {"block_type": 2, "body": "github\n", "keyword": "global ", "name": "provider        ", "next": {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, "options": null}}}, {"block_type": 6, "content": {"block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**}; \n", "keyword": "define ", "name": "gobuild", "next": null, "options": "(o:) "}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?gobuild:1}\n", "keyword": "if ", "next": {"block_type": 2, "body": "github\n", "keyword": "global ", "name": "provider        ", "next": {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, "options": null}}, {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}}, {"block_type": 1, "content": {"block_type": 0, "content": "        etcd golang devel libraries\n", "key": "Summary", "next": {"block_type": 0, "content": "      noarch\n", "key": "BuildArch", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}}, "option": null}, "option": null}, "keyword": "package ", "name": "devel\n", "next": null, "parameters": null}, {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, {"block_type": 1, "content": {"block_type": 0, "content": "         Unit tests for %{name} package\n", "key": "Summary", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, "option": null}}, "option": null}, "keyword": "package ", "name": "unit-test\n", "next": null, "parameters": null}, {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}, {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}], "headerTags": [{"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}, {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}, {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}, {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, {"block_type": 0, "content": "        etcd golang devel libraries\n", "key": "Summary", "next": {"block_type": 0, "content": "      noarch\n", "key": "BuildArch", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}}, "option": null}, "option": null}, {"block_type": 0, "content": "      noarch\n", "key": "BuildArch", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}}, "option": null}, {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, {"block_type": 0, "content": "         Unit tests for %{name} package\n", "key": "Summary", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, "option": null}}, "option": null}, {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, "option": null}, {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}], "macroConditions": [{"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}], "macroDefinitions": [{"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, "options": null}, "options": null}, {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 5, "content": "# Some tests fails and it takes a lot of time to investigate\n", "next": {"block_type": 5, "content": "# what is wrong\n", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}}}, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_devel ", "next": {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "1\n", "keyword": "global ", "name": "with_bundled ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_debug ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_check ", "next": {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "with_unit_test ", "next": null, "options": null}, {"block_type": 2, "body": "0\n", "keyword": "global ", "name": "_dwz_low_mem_die_limit ", "next": null, "options": null}, {"block_type": 2, "body": "%{nil}\n", "keyword": "global ", "name": "debug_package   ", "next": null, "options": null}, {"block_type": 2, "body": "go build -ldflags \"${LDFLAGS:-} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \\\\n')\" -a -v -x %{?**}; \n", "keyword": "define ", "name": "gobuild", "next": null, "options": "(o:) "}, {"block_type": 2, "body": "github\n", "keyword": "global ", "name": "provider        ", "next": {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "com\n", "keyword": "global ", "name": "provider_tld    ", "next": {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "coreos\n", "keyword": "global ", "name": "project         ", "next": {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, "options": null}, {"block_type": 2, "body": "etcd\n", "keyword": "global ", "name": "repo            ", "next": {"block_type": 5, "content": "# https://github.com/coreos/etcd\n", "next": {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}}, "options": null}, {"block_type": 2, "body": "%{provider}.%{provider_tld}/%{project}/%{repo}\n", "keyword": "global ", "name": "provider_prefix ", "next": {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "%{provider_prefix}\n", "keyword": "global ", "name": "import_path     ", "next": {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, "options": null}, {"block_type": 2, "body": "e5b7ee2d03627ca33201da428b8110ef7c3e95f1\n", "keyword": "global ", "name": "commit          ", "next": {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}, "options": null}, {"block_type": 2, "body": "%(c=%{commit}; echo ${c:0:7})\n\n", "keyword": "global ", "name": "shortcommit     ", "next": {"block_type": 0, "content": "\t\t%{repo}\n", "key": "Name", "next": {"block_type": 0, "content": "\t3.1.6\n", "key": "Version", "next": {"block_type": 0, "content": "\t1%{?dist}\n", "key": "Release", "next": {"block_type": 0, "content": "\tA highly-available key value store for shared configuration\n", "key": "Summary", "next": {"block_type": 0, "content": "\tASL 2.0\n", "key": "License", "next": {"block_type": 0, "content": "\t\thttps://%{provider_prefix}\n", "key": "URL", "next": {"block_type": 0, "content": "\thttps://%{provider_prefix}/archive/%{commit}/%{repo}-%{shortcommit}.tar.gz\n", "key": "Source0", "next": {"block_type": 0, "content": "\t%{name}.service\n", "key": "Source1", "next": {"block_type": 0, "content": "\t%{name}.conf\n", "key": "Source2", "next": {"block_type": 0, "content": "         change-import-path.patch\n", "key": "Patch2", "next": {"block_type": 0, "content": "         run-etcd-on-ppc64le-by-default.patch\n\n", "key": "Patch3", "next": {"block_type": 5, "content": "# e.g. el6 has ppc64 arch without gcc-go, so EA tag is required\n", "next": {"block_type": 0, "content": "  %{ix86} x86_64 %{arm} aarch64 ppc64le s390x\n", "key": "ExclusiveArch", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/transport)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "! 0%{?with_bundled}\n", "keyword": "if ", "next": {"block_type": 0, "content": "\tsystemd\n\n", "key": "BuildRequires", "next": {"block_type": 0, "content": "\tshadow-utils\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n", "key": "Requires", "next": {"block_type": 0, "content": " systemd\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, "option": "postun"}, "option": "preun"}, "option": "post"}, "option": "pre"}, "option": null}}, "option": null}}, "option": null}}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "options": null}], "macroUndefinitions": [], "sectionTags": [{"block_type": 1, "content": "\nA highly-available key value store for shared configuration.\n\n", "keyword": "description", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test} && 0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}}}, "parameters": null, "subname": null}, {"block_type": 1, "content": {"block_type": 0, "content": "        etcd golang devel libraries\n", "key": "Summary", "next": {"block_type": 0, "content": "      noarch\n", "key": "BuildArch", "next": {"block_type": 6, "content": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "BuildRequires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n", "key": "BuildRequires", "next": null, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 0, "content": " golang(github.com/bgentry/speakeasy)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/boltdb/bolt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cheggaaa/pb)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/cockroachdb/cmux)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-semver/semver)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/daemon)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/go-systemd/util)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/coreos/pkg/capnslog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/dustin/go-humanize)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ghodss/yaml)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/gogo/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/golang/protobuf/proto)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/google/btree)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/go-grpc-prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/runtime)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/grpc-ecosystem/grpc-gateway/utilities)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/jonboulle/clockwork)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/karlseguin/ccache)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/kr/pty)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/olekukonko/tablewriter)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/prometheus/client_golang/prometheus)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/cobra)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/spf13/pflag)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/ugorji/go/codec)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/urfave/cli)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(github.com/xiang90/probing)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/crypto/bcrypt)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/context)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/net/http2)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(golang.org/x/time/rate)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/codes)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/credentials)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/grpclog)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/metadata)\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(google.golang.org/grpc/naming)\n\n", "key": "Requires", "next": {"block_type": 0, "content": " golang(%{import_path}/alarm) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/auth/authpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/client/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/concurrency) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/mirror) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/clientv3/naming) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/compactor) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/contrib/recipes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/discovery) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/e2e) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/embed) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/error) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv2/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdctl/ctlv3/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdmain) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v2http/httptypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/api/v3rpc/rpctypes) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/auth) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/etcdserverpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/membership) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/etcdserver/stats) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/integration) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasehttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/lease/leasepb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/backend) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/mvcc/mvccpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/adt) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/contention) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cors) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/cpuutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/crc) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/expect) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/fileutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/flags) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/httputil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/idutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/ioutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/logutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstorage) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockstore) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/mock/mockwait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/monotime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/netutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/osutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pathutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/pbutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/report) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/runtime) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/schedule) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/stringutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/testutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/tlsutil) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/transport) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/types) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/pkg/wait) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/grpcproxy/cache) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/httpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/proxy/tcpproxy) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/raftpb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/raft/rafttest) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/rafthttp) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/snap/snappb) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/store) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/benchmark/cmd) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-agent/client) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/tools/functional-tester/etcd-runner/command) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/version) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal) = %{version}-%{release}\n", "key": "Provides", "next": {"block_type": 0, "content": " golang(%{import_path}/wal/walpb) = %{version}-%{release}\n\n", "key": "Provides", "next": {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}, "option": null}}, "option": null}, "option": null}, "keyword": "package ", "name": "devel\n", "next": null, "parameters": null}, {"block_type": 1, "content": "\ngolang development libraries for etcd, a highly-available key value store for\nshared configuration.", "keyword": "description ", "name": "devel", "next": null, "parameters": null, "subname": null}, {"block_type": 1, "content": {"block_type": 0, "content": "         Unit tests for %{name} package\n", "key": "Summary", "next": {"block_type": 5, "content": "# If go_compiler is not set to 1, there is no virtual provide. Use golang instead.\n", "next": {"block_type": 0, "content": "  %{?go_compiler:compiler(go-compiler)}%{!?go_compiler:golang}\n", "key": "BuildRequires", "next": {"block_type": 6, "content": {"block_type": 5, "content": "#Here comes all BuildRequires: PACKAGE the unit tests\n", "next": {"block_type": 5, "content": "#in %%check section need for running\n", "next": null}}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_check}\n", "keyword": "if ", "next": {"block_type": 5, "content": "# test subpackage tests code from devel subpackage\n", "next": {"block_type": 0, "content": "        %{name}-devel = %{version}-%{release}\n\n", "key": "Requires", "next": {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, "option": null}}}, "option": null}}, "option": null}, "keyword": "package ", "name": "unit-test\n", "next": null, "parameters": null}, {"block_type": 1, "content": "\n%{summary}\n\nThis package contains unit tests for project\nproviding packages with %{import_path} prefix.", "keyword": "description ", "name": "unit-test", "next": null, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%setup -q -n %{name}-%{commit}\n# move content of vendor under Godeps as has been so far\nmkdir -p Godeps/_workspace/src\nmv cmd/vendor/* Godeps/_workspace/src/.\n\n%patch2 -p1\n%patch3 -p1\n\n", "keyword": "prep", "name": null, "next": {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\nmkdir -p src/github.com/coreos\nln -s ../../../ src/github.com/coreos/etcd\n\n%if ! 0%{?with_bundled}\nexport GOPATH=$(pwd):%{gopath}\n%else\nexport GOPATH=$(pwd):$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\nexport LDFLAGS=\"-X %{import_path}/version.GitSHA=%{shortcommit}\"\n%gobuild -o bin/etcd %{import_path}/cmd/etcd\n%gobuild -o bin/etcdctl %{import_path}/etcdctl\n\n", "keyword": "build", "name": null, "next": {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\ninstall -D -p -m 0755 bin/%{name} %{buildroot}%{_bindir}/%{name}\ninstall -D -p -m 0755 bin/%{name}ctl %{buildroot}%{_bindir}/%{name}ctl\ninstall -D -p -m 0644 %{SOURCE1} %{buildroot}%{_unitdir}/%{name}.service\ninstall -d -m 0755 %{buildroot}%{_sysconfdir}/%{name}\ninstall -m 644 -t %{buildroot}%{_sysconfdir}/%{name} %{SOURCE2}\n\n# And create /var/lib/etcd\ninstall -d -m 0755 %{buildroot}%{_sharedstatedir}/%{name}\n\n# source codes for building projects\n%if 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\necho \"%%dir %%{gopath}/src/%%{import_path}/.\" >> devel.file-list\n# find all *.go but no *_test.go files and generate devel.file-list\nfor file in $(find . -iname \"*.go\" \\! -iname \"*_test.go\") ; do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> devel.file-list\ndone\n%endif\n\n# testing files for this project\n%if 0%{?with_unit_test} && 0%{?with_devel}\ninstall -d -p %{buildroot}/%{gopath}/src/%{import_path}/\n# find all *_test.go files and generate unit-test.file-list\nfor file in $(find . -iname \"*_test.go\"); do\n    echo \"%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)\" >> devel.file-list\n    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)\n    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file\n    echo \"%%{gopath}/src/%%{import_path}/$file\" >> unit-test.file-list\ndone\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/integration/\ncp -rpav integration/fixtures %{buildroot}/%{gopath}/src/%{import_path}/integration/.\necho \"%%{gopath}/src/%%{import_path}/integration/fixtures\" >> unit-test.file-list\n\ninstall -dp %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/testdata\ncp -rpav etcdserver/api/v2http/testdata %{buildroot}/%{gopath}/src/%{import_path}/etcdserver/api/v2http/.\necho \"%%{gopath}/src/%%{import_path}/etcdserver/api/v2http/testdata\" >> unit-test.file-list\n%endif\n\n%if 0%{?with_devel}\nsort -u -o devel.file-list devel.file-list\n%endif\n\n", "keyword": "install", "name": null, "next": {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%if 0%{?with_check} && 0%{?with_unit_test} && 0%{?with_devel}\n%if ! 0%{?with_bundled}\nexport GOPATH=%{buildroot}/%{gopath}:%{gopath}\n%else\nexport GOPATH=%{buildroot}/%{gopath}:$(pwd)/Godeps/_workspace:%{gopath}\n%endif\n\n%if ! 0%{?gotest:1}\n%global gotest go test\n%endif\n\n%ifarch x86_64\nRACE=\"--race\"\n%else\nRACE=\"\"\n%endif\n\n# unit-tests\n# TODO(jchaloup): read all the envs from test file\nexport IGNORE_PKGS=\"(cmd|vendor|etcdserverpb|rafttest)\"\nexport INTEGRATION_PKGS=\"(integration|e2e|contrib|functional-tester)\"\nexport TEST_PKGS=`find . -name \\*_test.go | while read a; do dirname $a; done | sort | uniq | egrep -v \"$IGNORE_PKGS\" | sed \"s|\\./||g\"`\nexport TESTS=`echo \"$TEST_PKGS\" | egrep -v \"$INTEGRATION_PKGS\"`\n\nfor test in ${TESTS}; do\n%gotest -timeout 3m -cover ${RACE} -cpu 1,2,4 -run=Test github.com/coreos/etcd/${test}\ndone\n\n./test\n\n%endif\n\n", "keyword": "check", "name": null, "next": {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\ngetent group %{name} >/dev/null || groupadd -r %{name}\ngetent passwd %{name} >/dev/null || useradd -r -g %{name} -d %{_sharedstatedir}/%{name} \\\n\t-s /sbin/nologin -c \"etcd user\" %{name}\n\n", "keyword": "pre", "name": null, "next": {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%systemd_post %{name}.service\n\n", "keyword": "post", "name": null, "next": {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%systemd_preun %{name}.service\n\n", "keyword": "preun", "name": null, "next": {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%systemd_postun %{name}.service\n\n#define license tag if not already defined\n", "keyword": "postun", "name": null, "next": {"block_type": 3, "condition": "!?", "content": "%global license %doc", "ending": "\n\n", "name": "_licensedir", "next": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%config(noreplace) %{_sysconfdir}/%{name}\n%{_bindir}/%{name}\n%{_bindir}/%{name}ctl\n%dir %attr(-,%{name},%{name}) %{_sharedstatedir}/%{name}\n%{_unitdir}/%{name}.service\n\n", "keyword": "files", "name": null, "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_devel}\n", "keyword": "if ", "next": {"block_type": 6, "content": {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, "else_body": [], "else_keyword": null, "end_keyword": "endif\n\n", "expression": "0%{?with_unit_test}\n", "keyword": "if ", "next": {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}}}, "parameters": null, "subname": null}, {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md\n%doc glide.lock\n%dir %{gopath}/src/%{provider}.%{provider_tld}/%{project}", "keyword": "files ", "name": "devel ", "next": null, "parameters": "f ", "subname": "devel.file-list"}, {"block_type": 1, "content": "\n%license LICENSE\n%doc *.md", "keyword": "files ", "name": "unit-test ", "next": null, "parameters": "f ", "subname": "unit-test.file-list"}, {"block_type": 1, "content": ["* Thu Apr 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.6-1\n- Update to 3.1.6\n  resolves: #1444068\n\n", "* Tue Mar 28 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.5-1\n- Update to 3.1.5\n  resolves: #1436452\n\n", "* Mon Mar 27 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.4-1\n- Update to 3.1.4\n  resolves: #1435028\n\n", "* Mon Mar 20 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.3-1\n- Update to v3.1.3\n  related: #1415341\n\n", "* Tue Mar 14 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.1.0-1\n- Update to v3.1.0\n  related: #1415341\n\n", "* Fri Feb 10 2017 Fedora Release Engineering <releng@fedoraproject.org> - 3.0.17-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_26_Mass_Rebuild\n\n", "* Mon Jan 23 2017 Jan Chaloupka <jchaloup@redhat.com> - 3.0.17-1\n- Update to v3.0.17\n  etcd-top removed by upstream\n  resolves: #1415622\n\n", "* Fri Nov 18 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-2\n- Remove ppc64le architecture restriction\n  resolves: #1396463\n\n", "* Tue Nov 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.15-1\n- Update to v3.0.15\n  related: #1382965\n\n", "* Mon Nov 07 2016 jchaloup <jchaloup@redhat.com> - 3.0.14-1\n- Update to v3.0.14\n  related: #1382965\n\n", "* Thu Oct 27 2016 jchaloup <jchaloup@redhat.com> - 3.0.13-1\n- Update to v3.0.13\n  related: #1382965\n\n", "* Mon Oct 24 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-2\n- Extend supported architectures with s390x\n\n", "* Thu Oct 13 2016 jchaloup <jchaloup@redhat.com> - 3.0.12-1\n- Update to v3.0.12\n  related: #1382965\n\n", "* Fri Sep 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.9-1\n- Update to v3.0.9\n  related: #1374880\n\n", "* Wed Sep 14 2016 jchaloup <jchaloup@redhat.com> - 3.0.8-1\n- Update to v3.0.8\n  resolves: #1374880\n\n", "* Fri Sep 09 2016 jchaloup <jchaloup@redhat.com> - 3.0.7-1\n- Update to v3.0.7\n  resolves: #1370678\n\n", "* Tue Aug 16 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-2\n- Hack test to provide ability to run unit-tests and integration tests\n  Still, keeping it disabled by default as it keeps failing\n  related: #1351818\n\n", "* Tue Aug 02 2016 jchaloup <jchaloup@redhat.com> - 3.0.4-1\n- Update to 3.0.4\n  related: #1351818\n\n", "* Thu Jul 28 2016 jchaloup <jchaloup@redhat.com> - 3.0.2-1\n- Update to 3.0.2\n  resolves: #1351818\n\n", "* Thu Jul 21 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.0-0.2.beta0\n- https://fedoraproject.org/wiki/Changes/golang1.7\n\n", "* Sun May 15 2016 jchaloup <jchaloup@redhat.com> - 3.0.0-0.1.beta0\n- Update to v3.0.0-beta0 (build from bundled until new deps appear in dist-git)\n  resolves: #1333988\n\n", "* Sat Apr 30 2016 jchaloup <jchaloup@redhat.com> - 2.3.3-1\n- Update to v2.3.3\n  resolves: #1331896\n\n", "* Fri Apr 22 2016 jchaloup <jchaloup@redhat.com> - 2.3.2-1\n- Update to v2.3.2\n  resolves: #1329438\n\n", "* Sat Apr  9 2016 Peter Robinson <pbrobinson@fedoraproject.org> 2.3.1-3\n- Enable aarch64\n\n", "* Wed Apr 06 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-2\n- Don't apply patch (for tests only which are disabled atm)\n\n", "* Mon Apr 04 2016 jchaloup <jchaloup@redhat.com> - 2.3.1-1\n- Update to v.2.3.1\n  resolves: #1323375\n\n", "* Sun Mar 20 2016 jchaloup <jchaloup@redhat.com> - 2.3.0-1\n- Update to v2.3.0\n  resolves: #1314441\n\n", "* Wed Mar 09 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-4\n- Only ppc64le is supported, ppc64 not\n  related: #1315419\n\n", "* Tue Mar 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-3\n- Extend archs to all supported\n  resolves: #1315419\n\n", "* Mon Feb 22 2016 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.2.5-2\n- https://fedoraproject.org/wiki/Changes/golang1.6\n\n", "* Thu Feb 18 2016 jchaloup <jchaloup@redhat.com> - 2.2.5-1\n- Update to v2.2.5\n\n", "* Wed Feb 03 2016 Fedora Release Engineering <releng@fedoraproject.org> - 2.2.4-2\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_24_Mass_Rebuild\n\n", "* Thu Jan 21 2016 jchaloup <jchaloup@redhat.com> - 2.2.4-1\n- Update to v2.2.4\n  resolves: #1300558\n\n", "* Fri Jan 08 2016 jchaloup <jchaloup@redhat.com> - 2.2.3-1\n- Update to v2.2.3\n  resolves: #1296809\n\n", "* Tue Dec 29 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-2\n- add missing options to etcd help (thanks to Joy Pu ypu@redhat.com)\n- add more information when running etcd as a service\n\n", "* Mon Dec 07 2015 jchaloup <jchaloup@redhat.com> - 2.2.2-1\n- Update to v2.2.2\n\n", "* Mon Nov 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-4\n- Update etcd.conf: add new options, fix current\n\n", "* Fri Oct 30 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-3\n- Add After=network-online.target and Wants=network-online.target\n  to etcd.service\n\n", "* Tue Oct 20 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-2\n- Set Type=notify instead of simple in etcd.service (upstream #1576)\n  related: #1272438\n\n", "* Fri Oct 16 2015 jchaloup <jchaloup@redhat.com> - 2.2.1-1\n- Update to v2.2.1\n  resolves: #1272438\n\n", "* Fri Sep 11 2015 jchaloup <jchaloup@redhat.com> - 2.2.0-1\n- Update to v2.2.0 (etcd-migrate gone)\n- Update to spec-2.1\n  resolves: #1253864\n\n", "* Mon Aug 31 2015 jchaloup <jchaloup@redhat.com> - 2.1.2-1\n- Update to v2.1.2\n  resolves: #1258599\n\n", "* Thu Jul 30 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-2\n- Enable debug info again\n  related: #1214958\n\n", "* Mon Jul 20 2015 jchaloup <jchaloup@redhat.com> - 2.1.1-1\n- fix definition of GOPATH for go1.5\n- fix definition of gobuild function for non-debug way\n- Update to v2.1.1\n  resolves: #1214958\n\n", "* Fri Jul 10 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-3\n- set GOMAXPROCS to use all processors available\n\n", "* Mon Jun 29 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-2\n- Remove -s option from -ldflags string as it removes symbol table\n  'go tool l6' gives explanation of all available options\n  resolves: #1236320\n\n", "* Fri Jun 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.13-1\n- Update to v2.0.13\n\n", "* Thu Jun 25 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-2\n- Add restart policy and set LimitNOFILE to/in etcd.service file\n- Update etcd.config file: add new flags and remove depricated\n- Update 'go build' flags for GIT_SHA (used in build script)\n- Don't use 4001 and 7001 ports in etcd.conf, they are replaced with 2379 and 2380\n\n", "* Wed Jun 24 2015 jchaloup <jchaloup@redhat.com> - 2.0.12-1\n- Update to v2.0.12\n- Polish spec file\n\n", "* Wed Jun 17 2015 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 2.0.11-3\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_23_Mass_Rebuild\n\n", "* Fri May 22 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-2\n- ETCD_ADVERTISE_CLIENT_URLS has to be set if ETCD_LISTEN_CLIENT_URLS is\n  related: #1222416\n\n", "* Mon May 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.11-1\n- Update to v2.0.11\n  resolves: #1222416\n\n", "* Thu Apr 23 2015 jchaloup <jchaloup@redhat.com> - 2.0.10-1\n- Update to v2.0.10\n  resolves: #1214705\n\n", "* Wed Apr 08 2015 jchaloup <jchaloup@redhat.com> - 2.0.9-1\n- Update to v2.0.9\n  resolves: #1209666\n\n", "* Fri Apr 03 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.2\n- Update spec file to fit for rhel too (thanks to eparis)\n  related: #1207881\n\n", "* Wed Apr 01 2015 jchaloup <jchaloup@redhat.com> - 2.0.8-0.1\n- Update to v2.0.8\n  resolves: #1207881\n\n", "* Tue Mar 31 2015 jchaloup <jchaloup@redhat.com> - 2.0.7-0.1\n- Update to v2.0.7\n  Add Godeps.json to doc\n  related: #1191441\n\n", "* Thu Mar 12 2015 jchaloup <jchaloup@redhat.com> - 2.0.5-0.1\n- Bump to 9481945228b97c5d019596b921d8b03833964d9e (v2.0.5)\n\n", "* Tue Mar 10 2015 Eric Paris <eparis@redhat.com> - 2.0.3-0.2\n- Fix .service files to work if no config file\n\n", "* Fri Feb 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.3-0.1\n- Bump to upstream 4d728cc8c488a545a8bdeafd054d9ccc2bfb6876\n\n", "* Wed Feb 18 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.2\n- Update configuration and service file\n  Fix depricated ErrWrongType after update of gogo/protobuf\n  related: #1191441\n\n", "* Wed Feb 11 2015 jchaloup <jchaloup@redhat.com> - 2.0.1-0.1\n- Update to 2.0.1\n  resolves: #1191441\n\n", "* Mon Feb 09 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.5\n- Add missing debug info to binaries (patch from Jan Kratochvil)\n  resolves: #1184257\n\n", "* Fri Jan 30 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.4\n- Update to etcd-2.0.0\n- use gopath as the last directory to search for source code\n  related: #1176138\n\n", "* Mon Jan 26 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.3.rc1\n- default to /var/lib/etcd/default.etcd as 2.0 uses that default (f21 commit byt eparis)\n  related: #1176138\n  fix /etc/etcd/etcd.conf path\n\n", "* Tue Jan 20 2015 jchaloup <jchaloup@redhat.com> - 2.0.0-0.2.rc1\n- Update of BuildRequires/Requires, Provides and test\n  Add BuildRequire on jonboulle/clockwork\n  related: #1176138\n\n", "* Tue Dec 23 2014 Lokesh Mandvekar <lsm5@fedoraproject.org> - 2.0.0-0.1.rc1\n- Resolves: rhbz#1176138 - update to v2.0.0-rc1\n- do not redefine gopath\n- use jonboulle/clockwork from within Godeps\n\n", "* Fri Oct 17 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-7\n- Add ExclusiveArch for go_arches\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-6\n- related: #1047194\n  Remove dependency on go.net\n\n", "* Mon Oct 06 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-5\n- Fix the .service file so it can launch!\n  related: #1047194\n\n", "* Mon Sep 22 2014 jchaloup <jchaloup@redhat.com> - 0.4.6-4\n- resolves: #1047194\n  Update to 0.4.6 from https://github.com/projectatomic/etcd-package\n\n", "* Tue Aug 19 2014 Adam Miller <maxamillion@fedoraproject.org> - 0.4.6-3\n- Add devel sub-package\n\n", "* Wed Aug 13 2014 Eric Paris <eparis@redhat.com> - 0.4.6-2\n- Bump to 0.4.6\n- run as etcd, not root\n\n", "* Sat Jun 07 2014 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 0.1.2-6\n- Rebuilt for https://fedoraproject.org/wiki/Fedora_21_Mass_Rebuild\n\n", "* Sun Oct 20 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-5\n- goprotobuf library unbundled (see rhbz #1018477)\n- go-log library unbundled (see rhbz #1018478)\n- go-raft library unbundled (see rhbz #1018479)\n- go-systemd library unbundled (see rhbz #1018480)\n- kardianos library unbundled (see rhbz #1018481)\n\n", "* Sun Oct 13 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-4\n- go.net library unbundled (see rhbz #1018476)\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-3\n- Prepare for packages unbundling\n- Verbose build\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-2\n- Fix typo in the etc.service file\n\n", "* Sat Oct 12 2013 Peter Lemenkov <lemenkov@gmail.com> - 0.1.2-1\n- Ver. 0.1.2\n- Integrate with systemd\n\n", "* Mon Aug 26 2013 Luke Cypret <cypret@fedoraproject.org> - 0.1.1-1\n- Initial creation\n"], "keyword": "changelog\n", "next": null}]}
